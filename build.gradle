buildscript {
	ext {
		kotlinVersion = '1.2.71'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'

group = 'com.gregwoodfill'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

dependencies {
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.7'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	implementation "org.jetbrains.kotlin:kotlin-reflect"

	implementation 'com.amazonaws:aws-lambda-java-core:1.2.0'
	implementation 'com.amazonaws:aws-lambda-java-events:2.2.6'

	compile 'net.sourceforge.htmlunit:htmlunit:2.32'

	compile 'com.amazon.alexa:ask-sdk-lambda-support:2.21.0'
	compile 'com.amazon.alexa:ask-sdk:2.21.0'

	compile 'com.github.kittinunf.fuel:fuel:2.2.1'
	compile 'com.github.kittinunf.fuel:fuel-jackson:2.2.1'

	testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')

	compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.12.1'
	compile 'org.apache.logging.log4j:log4j-core:2.12.1'
}

compileKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

compileTestKotlin {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '1.8'
	}
}

task buildZip(type: Zip) {
	from compileKotlin
	from processResources
	into('lib') {
		from configurations.runtimeClasspath
	}
}

build.dependsOn buildZip

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}